plugins {
	id 'java'
	id 'org.springframework.boot' version '3.2.3'
	id 'io.spring.dependency-management' version '1.1.4'
    id "io.swagger.core.v3.swagger-gradle-plugin" version "2.2.21"
	id "org.sonarqube" version "4.4.1.3373"
    id "jacoco"
}

group = 'com.example'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {

	implementation group: 'org.springdoc', name: 'springdoc-openapi-starter-webmvc-ui', version: '2.2.0'
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.mockito:mockito-core:3.12.4'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
	runtimeOnly 'org.postgresql:postgresql'

	testImplementation 'org.junit.jupiter:junit-jupiter-api'
	testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'

	implementation 'org.springframework.security:spring-security-core:6.2.4'
	implementation 'org.springframework.boot:spring-boot-starter-security:3.2.5'
	implementation 'io.jsonwebtoken:jjwt:0.12.5'
}

test() {
	useJUnitPlatform()
	testLogging.showStandardStreams = true
	testLogging {
		events "passed", "skipped", "failed"
	}
	finalizedBy(jacocoTestReport)
}

jacocoTestReport() {
	dependsOn test
	reports {
		xml.required = true
	}
}

jacoco {
	toolVersion = "0.8.10"
}

sonar {
	properties {
		property "sonar.projectKey", "Tiltet_BlogPlatform"
		property "sonar.organization", "tiltet"
		property "sonar.host.url", "https://sonarcloud.io"
	}
}